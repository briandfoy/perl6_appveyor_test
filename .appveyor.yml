# An experimental AppVeyor config to install Strawberry Perl and
# Rakudo Star. Once installed, AppVeyor caches those for use next time.
#
# I specifically don't build Rakudo from GitHub because I want to use
# the "normal people" release.


# AppVeyor environment variables: https://www.appveyor.com/docs/environment-variables/

image:
- Visual Studio 2015
- Ubuntu

platform: x64

# clearing the cache: https://github.com/appveyor/ci/issues/985
# change .appveyor_clear_cache.txt to invalidate cache
#
# If the build is successful, AppVeyor caches these files and
# directories for future builds
cache:
    - ps: C:\Strawberry -> .appveyor_clear_cache.txt
    - ps: C:\Rakudo -> .appveyor_clear_cache.txt

branches:
  only:
    - master

# set your own environment variables here.
#
# Perl 5's Test::Harness has several env variables (many appear as prove switches)
#   https://metacpan.org/pod/Test::Harness

environment:
    MY_VAR: true
    MSIEXEC_WAIT_SECONDS: 10
    AUTOMATED_TESTING: 1
    TEST_VERBOSE: 0
    HARNESS_OPTIONS:
    HARNESS_VERBOSE: 0
    HARNESS_TIMER: 1
    HARNESS_PERL_SWITCHES: -MDevel::Cover
    APPVEYOR_YML_DISABLE_PS_LINUX: true

install:
  # Install Strawberry Perl with chocolately.
  # Strawberry Perl comes with `prove`, which we use to run the tests.
  # http://strawberryperl.com
  # https://chocolatey.org/packages/StrawberryPerl
  - ps: if not exist "C:\Strawberry" cinst strawberryperl
  - ps: SET PATH=C:\strawberry\c\bin;C:\strawberry\perl\site\bin;C:\strawberry\perl\bin;%PATH%
  - ps: refreshenv
  - sh: apt-get install build-essential git libssl-dev
  - sh: apt-get install -y perl
  - perl -v
  # Install Rakudo Star with chocolately.
  # https://chocolatey.org/packages/rakudostar
  - ps: if not exist "C:\Rakudo" cinst rakudostar
  - ps: SET PATH=C:\rakudo\bin;C:\rakudo\share\perl6\site\bin;%PATH%
  - ps: refreshenv
  - sh: mkdir rakudo && cd $_
  - sh: curl -O https://rakudo.perl6.org/downloads/star/rakudo-star-2018.01.tar.gz
  - sh: tar -xvzf rakudo-star-2018.01.tar.gz
  - sh: cd rakudo-star-2018.01/
  - sh: perl Configure.pl --backend=moar --gen-moar
  - sh: make install
  - sh: export PATH=$(pwd)/install/bin/:$(pwd)/install/share/perl6/site/bin:\$PATH"
  - perl6 -v

build: off

# many of the settings in `environment` affect what happens in the test script
#
# I'd like to run Devel::Cover and submit to Coveralls too.
test_script:
  - prove -v -e "perl6 -Ilib" t/

shallow_clone: true
